@inject IJSRuntime JS

<div aria-live="polite" aria-atomic="true" class="position-relative">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true" id="errorToast" style="display: none;">
            <div class="d-flex">
                <div class="toast-body" id="errorToastBody">
                    @ToastMessage
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close" @onclick="HideToast"></button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string ToastMessage { get; set; } = "Erro inesperado.";

    public async Task ShowToast(string message)
    {
        ToastMessage = message;
        StateHasChanged(); 
        await JS.InvokeVoidAsync("showToast");
    }

    private void HideToast()
    {
        ToastMessage = string.Empty;
        StateHasChanged(); 
    }
}