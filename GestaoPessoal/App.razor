@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
             <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    Navigation.NavigateTo("/identity/account/login", forceLoad: true);
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Se o usuário não estiver autenticado, redirecione para a página de login
        if (!user.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("/identity/account/login", forceLoad: true);
        }
    }
}